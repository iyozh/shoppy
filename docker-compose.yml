version: "3.9"

services:
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=postgres
    ports:
        - "5438:5432"
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db
      - elastic
      - celery
      - flower

  redis:
    image: redis:6-alpine

  celery:
    build: .
    restart: always
    volumes:
      - .:/app
    command: celery -A project worker -l info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379
      - CELERY_RESULT_BACKEND=redis://redis:6379
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=postgres
    depends_on:
      - redis
      - db
      - elastic

#  celery-beat:
#    build: .
#    command: celery -A project beat -l info
#    volumes:
#      - .:/app
#    depends_on:
#      - db
#      - redis
#    environment:
#      - CELERY_BROKER_URL=redis://redis:6379
#      - CELERY_RESULT_BACKEND=redis://redis:6379
#      - POSTGRES_DB=postgres
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=postgres
#      - POSTGRES_HOST=postgres

  flower:
    build: .
    volumes:
      - .:/app
    command: celery -A project flower --port=5555
    environment:
      - CELERY_BROKER_URL=redis://redis:6379
      - CELERY_RESULT_BACKEND=redis://redis:6379
    depends_on:
      - redis
      - db
      - elastic
    ports:
      - "5555:5555"

  elastic:
    image: elasticsearch:7.8.1
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - network.host=0.0.0.0